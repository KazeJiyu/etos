[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module scalaClass('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')]

[import fr::kazejiyu::etos::pim::ecore::gen::scala::utils::names /]
[import fr::kazejiyu::etos::pim::ecore::gen::scala::utils::paths /]
[import fr::kazejiyu::etos::pim::ecore::gen::scala::utils::documentation /]

[template public genClassFile(aGenClass: GenClass)]
[file (aGenClass.genFilePath(), false, 'UTF-8')]
package [aGenClass.genPackage.basePackage/]

[aGenClass.genClassScalaDoc()/]
[aGenClass.genAbstract()/]class [aGenClass.genClassName()/]() {
    [aGenClass.genFields()/]

    [aGenClass.genGetters()/]

    [aGenClass.genSetters()/]
}
[/file]
[/template]

[** Generates "abstract" if the class is abstract */]
[template private genAbstract(aGenClass: GenClass) post(trim())]
[if (aGenClass.ecoreClass.abstract)]abstract [/if]
[/template]

[template private genFields(aGenClass: GenClass) post(trim())]
[for (anEAttribute: EAttribute | aGenClass.ecoreClass.eAttributes)]
private [anEAttribute.genModifier()/] _[anEAttribute.genFieldName()/]: [anEAttribute.eAttributeType.instanceClassName/] = [anEAttribute.defaultValue/]
[/for]
[/template]

[template private genModifier(anEAttribute: EAttribute) post(trim())]
[if (anEAttribute.unsettable)]val[else]var[/if]
[/template]

[template private genGetters(aGenClass: GenClass) post(trim())]
[for (anEAttribute: EAttribute | aGenClass.ecoreClass.eAttributes)]
def [anEAttribute.genGetterName()/]: [anEAttribute.eAttributeType.instanceClassName/] = [anEAttribute.genFieldName()/]
[/for]
[/template]

[template private genSetters(aGenClass: GenClass) post(trim())]
[for (anEAttribute: EAttribute | aGenClass.ecoreClass.eAttributes)]
[if not (anEAttribute.unsettable)]def [anEAttribute.genSetterName()/]([anEAttribute.genFieldName()/]: [anEAttribute.eAttributeType.instanceClassName/]) = _[anEAttribute.genFieldName()/] = [anEAttribute.genFieldName()/][/if]
[/for]
[/template]