[**
 * 		Copyright 2017 Emmanuel CHEBBI
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * 		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */]
[comment encoding = UTF-8 /]
[**
 * Generate attribute-related Scala code.
 */]
[module generate('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')]

[import fr::kazejiyu::etos::pim::ecore::gen::scala::attribute::names /]
[import fr::kazejiyu::etos::pim::ecore::gen::scala::attribute::documentation /]
[import fr::kazejiyu::etos::pim::ecore::gen::scala::utils::conversion /]

[template public genField(anEAttribute: EAttribute)]
[anEAttribute.genScalaDoc()/]
private [anEAttribute.genModifier()/] _[anEAttribute.genFieldName()/]: [anEAttribute.genTypeName()/] = [anEAttribute.defaultValue/]
[/template]

[** Generates either "val" or "var" according to field's visibility */]
[template private genModifier(anEAttribute: EAttribute) post(trim())]
[if (anEAttribute.unsettable)]val[else]var[/if]
[/template]